// Klo mau pake, pake aja ini bkn enc cma terser aja

// Klo mau pake, pake aja ini bkn enc cma terser aja

// Klo mau pake, pake aja ini bkn enc cma terser aja

import cp,{exec as _exec}from"child_process";import{promisify}from"util";let exec=promisify(_exec).bind(cp);import fs from"fs";let handler=async(m,{mufar:mufar,isROwner:isROwner,usedPrefix:usedPrefix,command:command,text:text})=>{if(await m.reply(global.wait),!isROwner)return;const[mainCommand,restText]=text.split(" ");switch(mainCommand){case"i":try{const items=fs.readdirSync("plugins");if(0===items.length)m.reply("Tidak ada folder atau file ditemukan di direktori 'plugins'.");else{const folders=items.filter((item=>fs.lstatSync(`plugins/${item}`).isDirectory())),files=items.filter((item=>!fs.lstatSync(`plugins/${item}`).isDirectory()));let response="Folder di direktori 'plugins':\n";response+=0===folders.length?"Tidak ada folder\n":folders.join("\n")+"\n",response+="File di direktori 'plugins':\n",response+=0===files.length?"Tidak ada file":files.join("\n"),m.reply(response)}}catch(err){m.reply("Terjadi kesalahan saat mencantumkan folder dan file.")}break;case"p":const[folder,file]=restText.split("/");if(folder)if(file){const filePath=`plugins/${folder}/${file}.js`;let o;try{o=await exec("cat "+filePath)}catch(e){o=e}finally{let{stdout:stdout,stderr:stderr}=o;stdout.trim()&&m.reply(stdout),stderr.trim()&&m.reply(stderr)}}else{const folderPath=`plugins/${folder}`;try{const files=fs.readdirSync(folderPath);0===files.length?m.reply(`Tidak ada file yang ditemukan di folder '${folder}'.`):m.reply(`File dalam folder '${folder}':\n${files.join("\n")}`)}catch(err){m.reply(`Folder '${folder}' tidak ditemukan atau terjadi kesalahan.`)}}else m.reply("Harap berikan nama folder, contoh: 'gp getplugin nama_folder'.");break;default:m.reply("Perintah tidak dikenali. Perintah yang didukung: 'i', 'p nama_folder', dan 'p nama_folder/nama_file'.")}};handler.help=["getplugin"].map((v=>v+" <text>")),handler.tags=["owner"],handler.command=/^(getplugin|gp)$/i,handler.rowner=!0;export default handler;